from typing import Any

from zakodb.types import (
    StrOrBytesPath,
    ZakoDbEntry,
    ZakoDbFieldProperty,
    ZakoDbHashedBytes,
    ZakoDbMetadata,
    ZakoDbPythonType,
    ZakoDbType,
    ZakoDbTypedValue,
)

class ZakoDbPrimitiveIO:
    def __init__(self, path: StrOrBytesPath) -> None: ...
    def read_raw(self, n: int) -> bytes: ...
    def read_bytes(self) -> bytes: ...
    def read_cstr(self) -> str: ...
    def read_int8(self) -> int: ...
    def read_uint8(self) -> int: ...
    def read_int16(self) -> int: ...
    def read_uint16(self) -> int: ...
    def read_int32(self) -> int: ...
    def read_uint32(self) -> int: ...
    def read_int64(self) -> int: ...
    def read_uint64(self) -> int: ...
    def read_float32(self) -> int: ...
    def read_float64(self) -> int: ...
    def write_raw(self, data: bytes) -> None: ...
    def write_bytes(self, data: bytes) -> None: ...
    def write_cstr(self, data: str) -> None: ...
    def write_int8(self, num: int) -> None: ...
    def write_uint8(self, num: int) -> None: ...
    def write_int16(self, num: int) -> None: ...
    def write_uint16(self, num: int) -> None: ...
    def write_int32(self, num: int) -> None: ...
    def write_uint32(self, num: int) -> None: ...
    def write_int64(self, num: int) -> None: ...
    def write_uint64(self, num: int) -> None: ...
    def write_float32(self, num: float) -> None: ...
    def write_float64(self, num: float) -> None: ...
    def seek(self, off: int, whence: int) -> None: ...
    def tell(self) -> int: ...

class ZakoDbIO:
    underlying: ZakoDbPrimitiveIO
    def __init__(self, path: StrOrBytesPath) -> None: ...
    def expect_magic(self) -> None: ...
    def write_magic(self) -> None: ...
    def write_hashed_bytes(self, obj: ZakoDbHashedBytes) -> None: ...
    def read_hashed_bytes(self) -> None: ...
    def read_metadata(self) -> ZakoDbMetadata: ...
    def write_metadata(self, metadata: ZakoDbMetadata) -> None: ...
    @staticmethod
    def check_type(value: ZakoDbPythonType, typ: ZakoDbType) -> ZakoDbPythonType: ...
    def write_type(self, typ: ZakoDbType) -> None: ...
    def write_value(self, value: ZakoDbPythonType, typ: ZakoDbType) -> None: ...
    def write_value_unchecked(self, value: Any, typ: ZakoDbType) -> None: ...
    def write_typed_value(self, value: ZakoDbTypedValue) -> None: ...
    def write_typed_value_unchecked(self, value: ZakoDbTypedValue) -> None: ...
    def read_value(self, typ: ZakoDbType) -> ZakoDbPythonType: ...
    def write_entry(
        self, entry: ZakoDbEntry, field_props: tuple[ZakoDbFieldProperty, ...]
    ) -> None: ...
    def read_entry(self, field_props: tuple[ZakoDbFieldProperty, ...]) -> ZakoDbEntry: ...
